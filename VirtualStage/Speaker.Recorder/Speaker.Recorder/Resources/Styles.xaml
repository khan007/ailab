<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Speaker.Recorder.Controls"
    xmlns:converters="clr-namespace:Speaker.Recorder.Converters">
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppDialogStyle" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource SecondaryDark1Brush}" />
        <Setter Property="Padding" Value="50,32" />
    </Style>

    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Primary1Brush}" />
        <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
        <Setter Property="BorderBrush" Value="{StaticResource Primary2Brush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="overBorder"
                            Margin="1"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="16"
                                    Opacity=".5"
                                    ShadowDepth="0"
                                    Color="{StaticResource Primary2Color}" />
                            </Border.Effect>
                        </Border>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3385E1" />
                            <Setter TargetName="overBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".2" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#1A66BD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Primary3Brush}" />
        <Setter Property="Foreground" Value="{StaticResource Primary1Brush}" />
        <Setter Property="BorderBrush" Value="{StaticResource Primary2Brush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="overBorder"
                            Margin="1"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="16"
                                    Opacity=".5"
                                    ShadowDepth="0"
                                    Color="{StaticResource Primary2Color}" />
                            </Border.Effect>
                        </Border>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#031224" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#010B16" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Primary1Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SessionUploadIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Primary1Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitleButtonButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlayerViewProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource Primary1Brush}" />
        <Setter Property="Background" Value="{StaticResource SecondaryDark2Brush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_Track" />
                        <Grid
                            x:Name="PART_Indicator"
                            HorizontalAlignment="Left"
                            ClipToBounds="true">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                            <Rectangle
                                x:Name="Animation"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="border"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="rectangle"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{StaticResource SecondaryGrey2Brush}"
                        RadiusX="5"
                        RadiusY="5"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource SecondaryGrey3Brush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource SecondaryGrey1Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent" />
    <Style x:Key="RecordListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="32,8" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Margin="0"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Border
                                x:Name="selectedBorder"
                                Margin="-2"
                                Padding="0"
                                Background="Transparent"
                                BorderBrush="{StaticResource Primary2Brush}"
                                BorderThickness="2"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="overBorder"
                                Margin="0"
                                Padding="4"
                                Background="{StaticResource Primary3Brush}"
                                BorderBrush="{StaticResource Primary3Brush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed">
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="16"
                                        Opacity="0.5"
                                        ShadowDepth="0"
                                        Color="{StaticResource Primary2Color}" />
                                </Border.Effect>
                            </Border>
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
                            <Setter TargetName="overBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="rectangle"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{StaticResource SecondaryGrey2Brush}"
                        RadiusX="5"
                        RadiusY="5"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource SecondaryGrey3Brush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource SecondaryGrey1Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="8" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="Margin" Value="6,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="0" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="0" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <RepeatButton
                            x:Name="PART_LineUpButton"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource ScrollBarButton}" />
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            x:Name="PART_LineDownButton"
                            Grid.Row="2"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource ScrollBarButton}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="8" />
                <Setter Property="MinHeight" Value="8" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Margin" Value="0,6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="0" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="0" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <RepeatButton
                                    x:Name="PART_LineLeftButton"
                                    Command="{x:Static ScrollBar.LineLeftCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource ScrollBarButton}" />
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Column="1"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton
                                    x:Name="PART_LineRightButton"
                                    Grid.Column="2"
                                    Command="{x:Static ScrollBar.LineRightCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource ScrollBarButton}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Border Grid.Column="1">
                            <ScrollContentPresenter />
                        </Border>
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            HorizontalAlignment="Right"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            VerticalAlignment="Bottom"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_VerticalScrollBar" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_HorizontalScrollBar" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Primary1Brush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        ClipToBounds="True">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RecordRadioButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Primary3Brush}" />
        <Setter Property="BorderBrush" Value="{StaticResource Primary2Brush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Border
                            x:Name="overBorder"
                            Margin="-4"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="16"
                                    Opacity=".5"
                                    ShadowDepth="0"
                                    Color="{StaticResource Primary2Color}" />
                            </Border.Effect>
                        </Border>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="overBorder" Property="Margin" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="overBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="RecordViewSessionsButtonStyle"
        BasedOn="{StaticResource SecondaryButtonStyle}"
        TargetType="Button" />
    <Style
        x:Key="RecordViewRecordButtonIdleStyle"
        BasedOn="{StaticResource PrimaryButtonStyle}"
        TargetType="Button">
        <Setter Property="Width" Value="300" />
    </Style>
    <Style
        x:Key="RecordViewRecordButtonRecordingStyle"
        BasedOn="{StaticResource RecordViewRecordButtonIdleStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SecondaryRed1Brush}" />
    </Style>
    <Style
        x:Key="ViewTitleStyle"
        BasedOn="{StaticResource Header1Style}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SecondaryLight3Brush}" />
    </Style>
    <Style
        x:Key="RecordViewTimeIdleStyle"
        BasedOn="{StaticResource Header1Style}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="56" />
        <Setter Property="LineHeight" Value="74" />
    </Style>
    <Style
        x:Key="RecordViewTimeRecordingStyle"
        BasedOn="{StaticResource Header1Style}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="56" />
        <Setter Property="LineHeight" Value="74" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryLight3Brush}" />
    </Style>
    <Style
        x:Key="RoomDialogTextStyle"
        BasedOn="{StaticResource BodyMediumStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="LineHeight" Value="36" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryLight3Brush}" />
    </Style>
    <Style
        x:Key="RecordViewSessionsTextStyle"
        BasedOn="{StaticResource BodyMediumStyle}"
        TargetType="TextBlock" />
    <Style
        x:Key="RecordViewViewerHeaderStyle"
        BasedOn="{StaticResource BodySmallStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
    </Style>
    <Style
        x:Key="RecordViewContentHeaderStyle"
        BasedOn="{StaticResource Header3Style}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
    </Style>

    <Style x:Key="KinectMainViewerStyle" TargetType="{x:Type controls:KinectControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:KinectControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image
                                    x:Name="PART_ImageHost"
                                    Width="{TemplateBinding RenderWidth}"
                                    Height="{TemplateBinding RenderHeight}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Stretch="Uniform"
                                    StretchDirection="Both" />
                            </Viewbox>
                            <StackPanel
                                x:Name="FailContainer"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <Image
                                    Margin="0,0,0,23"
                                    Source="/Resources/azure_kinect_front.png"
                                    Stretch="None" />
                                <TextBlock
                                    x:Name="FailText"
                                    HorizontalAlignment="Center"
                                    FontWeight="Light"
                                    Foreground="{StaticResource Primary4Brush}"
                                    Style="{StaticResource Header2Style}"
                                    Text="Kinect device is not connected" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFailed" Value="True">
                            <Setter TargetName="FailContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImageHost" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="KinectViewerStyle" TargetType="{x:Type controls:KinectControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:KinectControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Viewbox
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="UniformToFill">
                                <Image
                                    x:Name="PART_ImageHost"
                                    Width="{TemplateBinding RenderWidth}"
                                    Height="{TemplateBinding RenderHeight}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Viewbox>
                            <StackPanel
                                x:Name="FailContainer"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <Path
                                    Margin="0,0,0,8"
                                    HorizontalAlignment="Center"
                                    Data="M24.998 8.275a2 2 0 01.735.735l15.54 26.992A2 2 0 0139.542 39H8.459a2 2 0 01-1.733-2.998L22.266 9.01a2 2 0 012.732-.735zM24 10.008L8.46 37h31.08L24 10.008zM24 31a1 1 0 110 2 1 1 0 010-2zm0-11.25a1 1 0 01.993.883l.007.117v7.5a1 1 0 01-1.993.117L23 28.25v-7.5a1 1 0 011-1z"
                                    Fill="{StaticResource Primary4Brush}"
                                    Stretch="Uniform" />
                                <TextBlock
                                    x:Name="FailText"
                                    HorizontalAlignment="Center"
                                    FontWeight="Light"
                                    Foreground="{StaticResource Primary4Brush}"
                                    Style="{StaticResource BodySmallStyle}"
                                    Text="No signal" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFailed" Value="True">
                            <Setter TargetName="FailContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImageHost" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PowerPointMainViewerStyle" TargetType="{x:Type controls:PowerPointControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PowerPointControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image
                                    x:Name="PART_ImageHost"
                                    Width="{TemplateBinding RenderWidth}"
                                    Height="{TemplateBinding RenderHeight}" />
                            </Viewbox>
                            <StackPanel
                                x:Name="FailContainer"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <Path
                                    Margin="0,0,0,8"
                                    HorizontalAlignment="Center"
                                    Data="M24.998 8.275a2 2 0 01.735.735l15.54 26.992A2 2 0 0139.542 39H8.459a2 2 0 01-1.733-2.998L22.266 9.01a2 2 0 012.732-.735zM24 10.008L8.46 37h31.08L24 10.008zM24 31a1 1 0 110 2 1 1 0 010-2zm0-11.25a1 1 0 01.993.883l.007.117v7.5a1 1 0 01-1.993.117L23 28.25v-7.5a1 1 0 011-1z"
                                    Fill="{StaticResource Primary4Brush}"
                                    Stretch="Uniform" />
                                <TextBlock
                                    x:Name="FailText"
                                    HorizontalAlignment="Center"
                                    FontWeight="Light"
                                    Foreground="{StaticResource Primary4Brush}"
                                    Style="{StaticResource Header3Style}"
                                    Text="The PowerPoint file can not be loaded" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFailed" Value="True">
                            <Setter TargetName="FailContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImageHost" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PowerPointViewerStyle" TargetType="{x:Type controls:PowerPointControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PowerPointControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image
                                    x:Name="PART_ImageHost"
                                    Width="{TemplateBinding RenderWidth}"
                                    Height="{TemplateBinding RenderHeight}" />
                            </Viewbox>
                            <StackPanel
                                x:Name="FailContainer"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <Path
                                    Margin="0,0,0,8"
                                    HorizontalAlignment="Center"
                                    Data="M24.998 8.275a2 2 0 01.735.735l15.54 26.992A2 2 0 0139.542 39H8.459a2 2 0 01-1.733-2.998L22.266 9.01a2 2 0 012.732-.735zM24 10.008L8.46 37h31.08L24 10.008zM24 31a1 1 0 110 2 1 1 0 010-2zm0-11.25a1 1 0 01.993.883l.007.117v7.5a1 1 0 01-1.993.117L23 28.25v-7.5a1 1 0 011-1z"
                                    Fill="{StaticResource Primary4Brush}"
                                    Stretch="Uniform" />
                                <TextBlock
                                    x:Name="FailText"
                                    HorizontalAlignment="Center"
                                    FontWeight="Light"
                                    Foreground="{StaticResource Primary4Brush}"
                                    Style="{StaticResource BodySmallStyle}"
                                    Text="Load error" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFailed" Value="True">
                            <Setter TargetName="FailContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImageHost" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="{StaticResource Primary3Color}" />
    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="{StaticResource Primary1Color}" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA" />
    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6" />
    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid>
            <Border
                x:Name="grip"
                Width="19"
                Height="19"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource Primary3Brush}"
                BorderBrush="{StaticResource Primary1Brush}"
                BorderThickness="3"
                CornerRadius="9"
                UseLayoutRounding="True" />
            <Popup
                x:Name="ThumbPopup"
                HorizontalOffset="-6"
                Placement="Top"
                PlacementTarget="{Binding ElementName=grip}"
                VerticalOffset="-12">
                <TextBlock
                    Padding="14,6,14,7"
                    Background="{StaticResource Primary3Brush}"
                    Foreground="{StaticResource Primary2Brush}"
                    Text="{Binding Value, RelativeSource={RelativeSource AncestorType=Slider}, StringFormat=\{0:hh\\:mm\\:ss\}}" />
                <Popup.Effect>
                    <DropShadowEffect BlurRadius="24" Color="{StaticResource Primary3Color}" />
                </Popup.Effect>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource Primary3Brush}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource Primary2Brush}" />
                <Setter TargetName="grip" Property="Width" Value="23" />
                <Setter TargetName="grip" Property="Height" Value="23" />
                <Setter TargetName="ThumbPopup" Property="IsOpen" Value="True" />
                <Setter TargetName="grip" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="8"
                            ShadowDepth="0"
                            Color="{StaticResource Primary2Color}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource Primary3Brush}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource Primary2Brush}" />
                <Setter TargetName="grip" Property="Width" Value="23" />
                <Setter TargetName="grip" Property="Height" Value="23" />
                <Setter TargetName="grip" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="8"
                            ShadowDepth="0"
                            Color="{StaticResource Primary2Color}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource Primary3Brush}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource Primary2Brush}" />
                <Setter TargetName="grip" Property="Width" Value="23" />
                <Setter TargetName="grip" Property="Height" Value="23" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="IncreaseRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="IncreaseBorder"
                        Height="{TemplateBinding Height}"
                        Margin="0,0,5,0"
                        Background="DimGray" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="TimeLineStyle" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="4.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="{StaticResource Primary1Brush}">
                    <Canvas Margin="-6,-1">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Height="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            x:Name="test"
                            Height="4"
                            Command="{x:Static Slider.DecreaseLarge}"
                            Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            x:Name="test2"
                            Height="4"
                            Command="{x:Static Slider.IncreaseLarge}"
                            Style="{StaticResource IncreaseRepeatButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            VerticalAlignment="Center"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbHorizontalDefault}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="TrackBackground" Property="Height" Value="12" />
                <Setter TargetName="test2" Property="Height" Value="12" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="PlayerViewContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource Primary4Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="ContextMenuBorder">
                            <Border
                                Margin="5"
                                Background="{StaticResource SecondaryDark2Brush}"
                                BorderThickness="0">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="4"
                                        Opacity="1"
                                        ShadowDepth="0"
                                        Color="{StaticResource Primary2Color}" />
                                </Border.Effect>
                            </Border>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="ContextMenuBorder" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="ContextMenuBorder" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlayerViewMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border">
                        <ContentPresenter
                            Margin="16,4"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Primary3Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FailedButtonStyle"
        BasedOn="{StaticResource IconButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" ClipToBounds="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <TextBlock
                            x:Name="CustomText"
                            FontSize="14"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource SecondaryRed1Brush}"
                            Style="{StaticResource BodyMediumStyle}"
                            Text="Failed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Primary2Brush}" />
                            <Setter TargetName="CustomText" Property="Text" Value="Retry" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
